// Generated from grammar/bies.g4 by ANTLR 4.13.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,25,156,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,1,0,1,0,1,1,1,1,1,2,1,
2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,
1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,14,1,
14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,17,
1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,
20,1,20,5,20,120,8,20,10,20,12,20,123,9,20,1,21,4,21,126,8,21,11,21,12,21,
127,1,22,1,22,5,22,132,8,22,10,22,12,22,135,9,22,1,22,1,22,1,23,1,23,1,23,
1,23,5,23,143,8,23,10,23,12,23,146,9,23,1,23,1,23,1,24,4,24,151,8,24,11,
24,12,24,152,1,24,1,24,1,133,0,25,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,
9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,
43,22,45,23,47,24,49,25,1,0,5,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,
95,97,122,1,0,48,57,2,0,10,10,13,13,3,0,9,10,13,13,32,32,160,0,1,1,0,0,0,
0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,
0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,
1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,
0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,
0,0,0,0,49,1,0,0,0,1,51,1,0,0,0,3,53,1,0,0,0,5,55,1,0,0,0,7,57,1,0,0,0,9,
59,1,0,0,0,11,61,1,0,0,0,13,63,1,0,0,0,15,65,1,0,0,0,17,67,1,0,0,0,19,69,
1,0,0,0,21,71,1,0,0,0,23,73,1,0,0,0,25,77,1,0,0,0,27,83,1,0,0,0,29,87,1,
0,0,0,31,91,1,0,0,0,33,96,1,0,0,0,35,102,1,0,0,0,37,105,1,0,0,0,39,110,1,
0,0,0,41,117,1,0,0,0,43,125,1,0,0,0,45,129,1,0,0,0,47,138,1,0,0,0,49,150,
1,0,0,0,51,52,5,61,0,0,52,2,1,0,0,0,53,54,5,59,0,0,54,4,1,0,0,0,55,56,5,
40,0,0,56,6,1,0,0,0,57,58,5,41,0,0,58,8,1,0,0,0,59,60,5,44,0,0,60,10,1,0,
0,0,61,62,5,43,0,0,62,12,1,0,0,0,63,64,5,45,0,0,64,14,1,0,0,0,65,66,5,42,
0,0,66,16,1,0,0,0,67,68,5,47,0,0,68,18,1,0,0,0,69,70,5,123,0,0,70,20,1,0,
0,0,71,72,5,125,0,0,72,22,1,0,0,0,73,74,5,108,0,0,74,75,5,101,0,0,75,76,
5,116,0,0,76,24,1,0,0,0,77,78,5,99,0,0,78,79,5,111,0,0,79,80,5,110,0,0,80,
81,5,115,0,0,81,82,5,116,0,0,82,26,1,0,0,0,83,84,5,118,0,0,84,85,5,97,0,
0,85,86,5,114,0,0,86,28,1,0,0,0,87,88,5,102,0,0,88,89,5,117,0,0,89,90,5,
110,0,0,90,30,1,0,0,0,91,92,5,116,0,0,92,93,5,114,0,0,93,94,5,117,0,0,94,
95,5,101,0,0,95,32,1,0,0,0,96,97,5,102,0,0,97,98,5,97,0,0,98,99,5,108,0,
0,99,100,5,115,0,0,100,101,5,101,0,0,101,34,1,0,0,0,102,103,5,105,0,0,103,
104,5,102,0,0,104,36,1,0,0,0,105,106,5,101,0,0,106,107,5,108,0,0,107,108,
5,115,0,0,108,109,5,101,0,0,109,38,1,0,0,0,110,111,5,114,0,0,111,112,5,101,
0,0,112,113,5,116,0,0,113,114,5,117,0,0,114,115,5,114,0,0,115,116,5,110,
0,0,116,40,1,0,0,0,117,121,7,0,0,0,118,120,7,1,0,0,119,118,1,0,0,0,120,123,
1,0,0,0,121,119,1,0,0,0,121,122,1,0,0,0,122,42,1,0,0,0,123,121,1,0,0,0,124,
126,7,2,0,0,125,124,1,0,0,0,126,127,1,0,0,0,127,125,1,0,0,0,127,128,1,0,
0,0,128,44,1,0,0,0,129,133,5,34,0,0,130,132,9,0,0,0,131,130,1,0,0,0,132,
135,1,0,0,0,133,134,1,0,0,0,133,131,1,0,0,0,134,136,1,0,0,0,135,133,1,0,
0,0,136,137,5,34,0,0,137,46,1,0,0,0,138,139,5,47,0,0,139,140,5,47,0,0,140,
144,1,0,0,0,141,143,8,3,0,0,142,141,1,0,0,0,143,146,1,0,0,0,144,142,1,0,
0,0,144,145,1,0,0,0,145,147,1,0,0,0,146,144,1,0,0,0,147,148,6,23,0,0,148,
48,1,0,0,0,149,151,7,4,0,0,150,149,1,0,0,0,151,152,1,0,0,0,152,150,1,0,0,
0,152,153,1,0,0,0,153,154,1,0,0,0,154,155,6,24,0,0,155,50,1,0,0,0,6,0,121,
127,133,144,152,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class biesLexer extends antlr4.Lexer {

    static grammarFileName = "bies.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'='", "';'", "'('", "')'", "','", "'+'", 
                         "'-'", "'*'", "'/'", "'{'", "'}'", "'let'", "'const'", 
                         "'var'", "'fun'", "'true'", "'false'", "'if'", 
                         "'else'", "'return'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, "LET", "CONST", "VAR", 
                          "FUN", "TRUE", "FALSE", "IF", "ELSE", "RETURN", 
                          "ID", "INT", "STRING", "COMMENT", "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "LET", "CONST", "VAR", 
                      "FUN", "TRUE", "FALSE", "IF", "ELSE", "RETURN", "ID", 
                      "INT", "STRING", "COMMENT", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

biesLexer.EOF = antlr4.Token.EOF;
biesLexer.T__0 = 1;
biesLexer.T__1 = 2;
biesLexer.T__2 = 3;
biesLexer.T__3 = 4;
biesLexer.T__4 = 5;
biesLexer.T__5 = 6;
biesLexer.T__6 = 7;
biesLexer.T__7 = 8;
biesLexer.T__8 = 9;
biesLexer.T__9 = 10;
biesLexer.T__10 = 11;
biesLexer.LET = 12;
biesLexer.CONST = 13;
biesLexer.VAR = 14;
biesLexer.FUN = 15;
biesLexer.TRUE = 16;
biesLexer.FALSE = 17;
biesLexer.IF = 18;
biesLexer.ELSE = 19;
biesLexer.RETURN = 20;
biesLexer.ID = 21;
biesLexer.INT = 22;
biesLexer.STRING = 23;
biesLexer.COMMENT = 24;
biesLexer.WS = 25;



