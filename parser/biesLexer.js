// Generated from grammar/bies.g4 by ANTLR 4.13.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,21,140,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,
7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,
11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,14,
1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,5,16,104,
8,16,10,16,12,16,107,9,16,1,17,4,17,110,8,17,11,17,12,17,111,1,18,1,18,5,
18,116,8,18,10,18,12,18,119,9,18,1,18,1,18,1,19,1,19,1,19,1,19,5,19,127,
8,19,10,19,12,19,130,9,19,1,19,1,19,1,20,4,20,135,8,20,11,20,12,20,136,1,
20,1,20,1,117,0,21,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,
12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,1,0,5,3,0,65,90,
95,95,97,122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,2,0,10,10,13,13,3,0,
9,10,13,13,32,32,144,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,
1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,
0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,
0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,1,
43,1,0,0,0,3,45,1,0,0,0,5,47,1,0,0,0,7,49,1,0,0,0,9,51,1,0,0,0,11,53,1,0,
0,0,13,55,1,0,0,0,15,57,1,0,0,0,17,61,1,0,0,0,19,67,1,0,0,0,21,71,1,0,0,
0,23,75,1,0,0,0,25,80,1,0,0,0,27,86,1,0,0,0,29,89,1,0,0,0,31,94,1,0,0,0,
33,101,1,0,0,0,35,109,1,0,0,0,37,113,1,0,0,0,39,122,1,0,0,0,41,134,1,0,0,
0,43,44,5,61,0,0,44,2,1,0,0,0,45,46,5,43,0,0,46,4,1,0,0,0,47,48,5,45,0,0,
48,6,1,0,0,0,49,50,5,42,0,0,50,8,1,0,0,0,51,52,5,47,0,0,52,10,1,0,0,0,53,
54,5,40,0,0,54,12,1,0,0,0,55,56,5,41,0,0,56,14,1,0,0,0,57,58,5,108,0,0,58,
59,5,101,0,0,59,60,5,116,0,0,60,16,1,0,0,0,61,62,5,99,0,0,62,63,5,111,0,
0,63,64,5,110,0,0,64,65,5,115,0,0,65,66,5,116,0,0,66,18,1,0,0,0,67,68,5,
118,0,0,68,69,5,97,0,0,69,70,5,114,0,0,70,20,1,0,0,0,71,72,5,102,0,0,72,
73,5,117,0,0,73,74,5,110,0,0,74,22,1,0,0,0,75,76,5,116,0,0,76,77,5,114,0,
0,77,78,5,117,0,0,78,79,5,101,0,0,79,24,1,0,0,0,80,81,5,102,0,0,81,82,5,
97,0,0,82,83,5,108,0,0,83,84,5,115,0,0,84,85,5,101,0,0,85,26,1,0,0,0,86,
87,5,105,0,0,87,88,5,102,0,0,88,28,1,0,0,0,89,90,5,101,0,0,90,91,5,108,0,
0,91,92,5,115,0,0,92,93,5,101,0,0,93,30,1,0,0,0,94,95,5,114,0,0,95,96,5,
101,0,0,96,97,5,116,0,0,97,98,5,117,0,0,98,99,5,114,0,0,99,100,5,110,0,0,
100,32,1,0,0,0,101,105,7,0,0,0,102,104,7,1,0,0,103,102,1,0,0,0,104,107,1,
0,0,0,105,103,1,0,0,0,105,106,1,0,0,0,106,34,1,0,0,0,107,105,1,0,0,0,108,
110,7,2,0,0,109,108,1,0,0,0,110,111,1,0,0,0,111,109,1,0,0,0,111,112,1,0,
0,0,112,36,1,0,0,0,113,117,5,34,0,0,114,116,9,0,0,0,115,114,1,0,0,0,116,
119,1,0,0,0,117,118,1,0,0,0,117,115,1,0,0,0,118,120,1,0,0,0,119,117,1,0,
0,0,120,121,5,34,0,0,121,38,1,0,0,0,122,123,5,47,0,0,123,124,5,47,0,0,124,
128,1,0,0,0,125,127,8,3,0,0,126,125,1,0,0,0,127,130,1,0,0,0,128,126,1,0,
0,0,128,129,1,0,0,0,129,131,1,0,0,0,130,128,1,0,0,0,131,132,6,19,0,0,132,
40,1,0,0,0,133,135,7,4,0,0,134,133,1,0,0,0,135,136,1,0,0,0,136,134,1,0,0,
0,136,137,1,0,0,0,137,138,1,0,0,0,138,139,6,20,0,0,139,42,1,0,0,0,6,0,105,
111,117,128,136,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class biesLexer extends antlr4.Lexer {

    static grammarFileName = "bies.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'='", "'+'", "'-'", "'*'", "'/'", "'('", 
                         "')'", "'let'", "'const'", "'var'", "'fun'", "'true'", 
                         "'false'", "'if'", "'else'", "'return'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          "LET", "CONST", "VAR", "FUN", "TRUE", "FALSE", 
                          "IF", "ELSE", "RETURN", "ID", "INT", "STRING", 
                          "COMMENT", "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "LET", "CONST", "VAR", "FUN", "TRUE", "FALSE", "IF", 
                      "ELSE", "RETURN", "ID", "INT", "STRING", "COMMENT", 
                      "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

biesLexer.EOF = antlr4.Token.EOF;
biesLexer.T__0 = 1;
biesLexer.T__1 = 2;
biesLexer.T__2 = 3;
biesLexer.T__3 = 4;
biesLexer.T__4 = 5;
biesLexer.T__5 = 6;
biesLexer.T__6 = 7;
biesLexer.LET = 8;
biesLexer.CONST = 9;
biesLexer.VAR = 10;
biesLexer.FUN = 11;
biesLexer.TRUE = 12;
biesLexer.FALSE = 13;
biesLexer.IF = 14;
biesLexer.ELSE = 15;
biesLexer.RETURN = 16;
biesLexer.ID = 17;
biesLexer.INT = 18;
biesLexer.STRING = 19;
biesLexer.COMMENT = 20;
biesLexer.WS = 21;



